#Grokking the Object Oriented Design Interview

System REquirements:
--------------------

1. The parking lot should have -multiple floors- where customers can park
thier cars.

2. Should have multiple entry and exit points.

3. customers can collect parking tickets from entry points and can pay parking fees
on exit points on the way.

4. Customers can pay the tickets at the automated exit panel or to the parking attendent.

5. Customers can pay via both cash and credit cards.

6. Customers should also be able to pay parking fee at the cusotmer's info panel on each floor.
If the customer has paid already at the info portal, they don't have to pay at exit.

7. The parking system have a fixed capacity. If parking is full, the system should be able to show a message at the entrance panel and on the
parking display board on the ground floor.

8. Each parking floor wil have multiple types of parking spots. THe system should support multiple types of parking spots such as compact, Large, Handicapped, Motorcycle, etc.

9. The parking System should have some parkign spots specified for electrica cars. These spots should have an electric panel through which customers can pay and charge thier vehicles.

10. The system shold support differenet type sof vehicles like car, truck, van, motocycle, etc.

11. Each parkign floor should have a display board showing any free parking spot for each spot type.

12. The system should support a per hour parking fee model. E.g, customers have to pay 10$ for the first hour, 15$ for the second and third hours and 20$ for all the remaining hours.





Use case diagram:
-----------------

Main Actors in our system:

Admin: Mainly responsible for adding and modifying parking floors, parking spots, entrance, and exit panels, adding/removing parking attendants etc.

Customer: All customers can get a parking ticket and pay for it.

Parking attendant: Parking attendants can do all the activities on the customer's behalf, and can take cash for ticket payment.

System: To display message on different panels, as well as assigning and removing a vehicle from a parking spot.



Usecases:

Add/Remove/Edit parking floor:
To add, rmeove, modify a parking floor from the system. Each floor can have its own display board to show free parking spots.

Add/ Remove/ Edit parkign spot:
To add, remove, modify a parkign spot on a parking floor.

Add/Remove a parking attendant:
To add or remove a parkign attendant from the system.

Take Ticket:
To provide customers with a new parking ticket when entering the parking lot.

Scan ticekt:
TO scan a ticket to find out the total charge.

Credit card payment:
to pay the ticket fee with credit card.

Cash payment:
To pay the parking ticket through cash.

Add/modify parking rate:
TO allow admin to add or modify the hourly parking rate.





Class Diagram:
---------------

ParkingLot:
The central part of the organization for which this software has been designed. It has attributes like 'Name' to
distinguish it from any other parking lots and 'Address' to define its location.


ParkingFloor:
The parking lot will have many parking floors.

ParkingSpot:
Each parking floor will have many parking spots. Our system will support different parking spots
1)Handicapped, 2)Compact, 3)Large, 4)Motocycle, and 5) Electric.

Account:
We will have two types of accounts in the system: One for an Admin, and the other for a parking attendant.

Vehicle:
Vehicles will be parked in the parkign spots. Our system will support different types of vehicles
1) Car, 2)Truck, 3)Electric, 4) Van, 5) Motorcycle.

EntrancePanel and ExitPanel:
EntrancePanel will print tickets, and ExitPanel will facilitate payment of the ticket fee.

Payment:
This class will be responsible for making payments. The system wil support credit card and cash transactions.

ParkingRate:
This class will keep track of the hourly parking rates. It will specify a dollar amount for each hour.

ParkingDisplayBoard:
Each parking floor will have a display board to show available parking spots for each
each spot type. This class will be responsible for displaying the latest availability
of free parking spots to the customers.

ParkingAttendantPortal:
This class will encapsulate all the operations that an attendant can perform, like scanning tickets and processing payments.

CustomerInfoPortal:
This class will encapsulate the info portal that customers use to pay for the parking ticket.
Once paid, the info portal will update the ticket to keep track of the payment.

ElectricPanel:
Customers will use the electric panels to pay and charge thier electric vehicles.

class diagram----





Activity diagrams:
------------------



Code:
-----
